name: DevSecOps Pipeline

on:
  push:
    branches: [ "**" ]

env:
  POSTGRES_USER: root
  POSTGRES_PASSWORD: root
  POSTGRES_DB: payments-portal

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install mkcert
        run: |
          sudo apt update
          sudo apt install -y libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo mv mkcert-v*-linux-amd64 /usr/local/bin/mkcert
          mkcert -install
      
      - name: Run npm audit for backend
        working-directory: ./server
        run: npm audit --production
        
      - name: Run npm audit for frontend
        working-directory: ./client
        run: npm audit --production --audit-level=high
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  backend-verify:
    needs: security-checks
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      PORT: 8082
      DATABASE_URL: postgresql://root:root@localhost:5432/payments-portal
      SECRET_KEY: ${{ secrets.BACKEND_SECRET_KEY }}  # Store in GitHub Secrets
      FRONTEND_URL: https://localhost:8080#5173
      NODE_ENV: development
    steps:
      - uses: actions/checkout@v4

      - name: Install mkcert
        run: |
          sudo apt update
          sudo apt install -y libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo mv mkcert-v*-linux-amd64 /usr/local/bin/mkcert
          mkcert -install
      
      - name: Generate backend certs
        working-directory: ./server
        run: |
          mkdir -p certs
          mkcert -key-file certs/backend-key.pem -cert-file certs/backend-cert.pem localhost
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci
        
      - name: Generate Prisma client
        working-directory: ./server
        run: npx prisma generate
        
      - name: Run database migrations
        working-directory: ./server
        run: npx prisma migrate dev --name init

  frontend-build:
    runs-on: ubuntu-latest
    env:
      VITE_APP_BACKEND_URL: https://localhost:8082  # Matches backend PORT
    steps:
      - uses: actions/checkout@v4

      - name: Install mkcert
        run: |
          sudo apt update
          sudo apt install -y libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo mv mkcert-v*-linux-amd64 /usr/local/bin/mkcert
          mkcert -install
      
      - name: Generate frontend certs
        working-directory: ./client
        run: |
          mkdir -p certs
          mkcert -key-file certs/frontend-key.pem -cert-file certs/frontend-cert.pem localhost
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci
        
      - name: Build frontend
        working-directory: ./client
        run: npm run build